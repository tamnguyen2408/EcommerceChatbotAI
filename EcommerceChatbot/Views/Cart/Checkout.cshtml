@{
    ViewData["Title"] = "Checkout";
}

<h2 class="text-center mb-4">Checkout</h2>

<div class="checkout-container">
    <!-- Cart Items Section -->
    <div id="checkoutItemsContainer" class="checkout-items-container">
        <!-- Cart items will be dynamically rendered here -->
    </div>

    <!-- Total Amount Section -->
    <div class="total-section">
        <div class="d-flex justify-content-between">
            <strong>Total:</strong> <span id="totalAmount">0 USD</span>
        </div>
    </div>

    <!-- Customer Information Form -->
    <div class="customer-info">
        <h4 class="mt-4">Customer Information</h4>
        <form id="paymentForm" class="payment-form" method="POST" action="">
            <!-- Name -->
            <div class="form-group">
                <label for="fullName">Full Name</label>
                <input type="text" id="fullName" name="fullName" class="form-control" required placeholder="Enter your full name">
            </div>

            <!-- Address -->
            <div class="form-group">
                <label for="address">Address</label>
                <input type="text" id="address" name="address" class="form-control" required placeholder="Enter your address">
            </div>

            <!-- Phone Number -->
            <div class="form-group">
                <label for="phoneNumber">Phone Number</label>
                <input type="tel" id="phoneNumber" name="phoneNumber" class="form-control" required placeholder="Enter your phone number">
            </div>

            <!-- Payment Method Selection -->
            <div class="form-group">
                <label for="paymentMethod">Payment Method</label>
                <select id="paymentMethod" name="paymentMethod" class="form-control" required>
                    <option value="cashOnDelivery">Cash on Delivery</option>
                    <option value="onlinePayment">Online Payment</option>
                </select>
            </div>

            <!-- Submit and Cancel Buttons -->
            <div class="form-group text-center">
                <button type="button" class="btn btn-primary" onclick="processPayment()">Pay Now</button>
                <button type="button" class="btn btn-secondary" onclick="cancelPayment()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<style>
    /* General Container Styling */
    .checkout-container {
        width: 100%;
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    /* Section Styling */
    .checkout-items-container {
        margin-bottom: 20px;
    }

    /* Cart Item Styling */
    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding: 10px;
        background-color: #f8f8f8;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .cart-item-info {
        display: flex;
        align-items: center;
        gap: 20px;
        width: 100%;
    }

    .cart-item img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 5px;
    }

    .cart-item-text {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex: 1;
    }

    .cart-item-name {
        font-weight: bold;
        font-size: 1em;
        color: #333;
        flex: 2;
    }

    .cart-item-quantity {
        font-size: 0.9em;
        color: #666;
        flex: 1;
        text-align: center;
    }

    .cart-item-price {
        font-size: 1em;
        color: #333;
        font-weight: bold;
        flex: 1;
        text-align: right;
    }

    /* Total Section Styling */
    .total-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border-top: 2px solid #f0f0f0;
        margin-top: 20px;
        font-weight: bold;
        font-size: 1.2em;
    }

    /* Customer Information Section */
    .customer-info {
        margin-top: 30px;
    }

        .customer-info h4 {
            font-size: 1.2em;
            color: #333;
            margin-bottom: 10px;
        }

    /* Form Fields Styling */
    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        font-size: 1em;
        border-radius: 5px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

        .form-control:focus {
            border-color: #007bff;
            outline: none;
        }

    /* Payment Form Button Styling */
    .payment-form .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        padding: 12px 20px;
        font-size: 1em;
        width: auto;
        border-radius: 5px;
        margin-right: 10px;
    }

        .payment-form .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .payment-form .btn-secondary {
        background-color: #f0f0f0;
        border-color: #ccc;
        padding: 12px 20px;
        font-size: 1em;
        width: auto;
        border-radius: 5px;
    }

        .payment-form .btn-secondary:hover {
            background-color: #e0e0e0;
            border-color: #bbb;
        }
</style>

<script>
    // Render cart items on checkout page
    function renderCheckoutItems() {
        const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
        const checkoutItemsContainer = document.getElementById('checkoutItemsContainer');
        const totalAmountElement = document.getElementById('totalAmount');
        checkoutItemsContainer.innerHTML = '';  // Clear previous content

        let totalAmount = 0;

        if (cart.length === 0) {
            checkoutItemsContainer.innerHTML = '<p>Your cart is empty.</p>';
            totalAmountElement.textContent = '0 USD';
            return;
        }

        cart.forEach((item, index) => {
            const itemTotal = item.price * item.quantity;
            totalAmount += itemTotal;

            const itemElement = document.createElement('div');
            itemElement.classList.add('cart-item');
            itemElement.innerHTML = `
                        <div class="cart-item-info">
                            <img src="${item.image}" alt="${item.name}">
                            <div class="cart-item-text">
                                <div class="cart-item-name">${item.name}</div>
                                <div class="cart-item-quantity">Quantity: <span>${item.quantity}</span></div>
                                <div class="cart-item-price">${itemTotal.toFixed(2)} USD</div>
                            </div>
                        </div>
                    `;
            checkoutItemsContainer.appendChild(itemElement);
        });

        totalAmountElement.textContent = `${totalAmount.toFixed(2)} USD`;
    }

    // Call renderCheckoutItems on page load to display cart details
    window.onload = function () {
        renderCheckoutItems();
    }

    // Process Payment based on selected payment method
    function processPayment() {
        // Get the values from the input fields
        const fullName = document.getElementById('fullName').value.trim();
        const address = document.getElementById('address').value.trim();
        const phoneNumber = document.getElementById('phoneNumber').value.trim();
        const paymentMethod = document.getElementById('paymentMethod').value;

        let errorMessage = '';

        // Check if each required field is empty and add to error message
        if (fullName === "") {
            errorMessage += "Full Name is required.\n";
        }
        if (address === "") {
            errorMessage += "Address is required.\n";
        }
        if (phoneNumber === "") {
            errorMessage += "Phone Number is required.\n";
        }

        // If there are any error messages, show them and stop form submission
        if (errorMessage !== "") {
            alert(errorMessage);
            return;  // Prevent form submission
        }

        // If the payment method is online payment, handle accordingly
        if (paymentMethod === 'cashOnDelivery') {
            // Redirect to order confirmation page for Cash on Delivery
            window.location.href = '/OrderConfirmation/OrderConfirmations'; // Corrected URL
        } else if (paymentMethod === 'onlinePayment') {
            // Redirect to VNPay for Online Payment
            document.getElementById('paymentForm').action = '/Order/RedirectToVNPay';
            document.getElementById('paymentForm').submit();
        }

    }

    // Cancel Payment and Redirect to Home
    function cancelPayment() {
        window.location.href = '/';  // Redirect to home page (adjust URL if necessary)
    }
</script>

